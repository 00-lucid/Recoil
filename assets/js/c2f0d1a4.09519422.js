(self.webpackChunkrecoil=self.webpackChunkrecoil||[]).push([[5726],{3905:function(e,t,r){"use strict";r.d(t,{Zo:function(){return u},kt:function(){return R}});var o=r(7294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function c(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,o)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?c(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):c(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function a(e,t){if(null==e)return{};var r,o,n=function(e,t){if(null==e)return{};var r,o,n={},c=Object.keys(e);for(o=0;o<c.length;o++)r=c[o],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(o=0;o<c.length;o++)r=c[o],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var s=o.createContext({}),l=function(e){var t=o.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},u=function(e){var t=l(e.components);return o.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},d=o.forwardRef((function(e,t){var r=e.components,n=e.mdxType,c=e.originalType,s=e.parentName,u=a(e,["components","mdxType","originalType","parentName"]),d=l(r),R=n,f=d["".concat(s,".").concat(R)]||d[R]||p[R]||c;return r?o.createElement(f,i(i({ref:t},u),{},{components:r})):o.createElement(f,i({ref:t},u))}));function R(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var c=r.length,i=new Array(c);i[0]=d;var a={};for(var s in t)hasOwnProperty.call(t,s)&&(a[s]=t[s]);a.originalType=e,a.mdxType="string"==typeof e?e:n,i[1]=a;for(var l=2;l<c;l++)i[l]=r[l];return o.createElement.apply(null,i)}return o.createElement.apply(null,r)}d.displayName="MDXCreateElement"},3732:function(e,t,r){"use strict";r.r(t),r.d(t,{frontMatter:function(){return i},metadata:function(){return a},toc:function(){return s},default:function(){return u}});var o=r(2122),n=r(9756),c=(r(7294),r(3905)),i={title:"useRecoilBridgeAcrossReactRoots()",sidebar_label:"useRecoilBridgeAcrossReactRoots()"},a={unversionedId:"api-reference/core/useRecoilBridgeAcrossReactRoots",id:"api-reference/core/useRecoilBridgeAcrossReactRoots",isDocsHomePage:!1,title:"useRecoilBridgeAcrossReactRoots()",description:"A hook to help with bridging Recoil state with a nested React root and renderer.",source:"@site/docs/api-reference/core/useRecoilBridgeAcrossReactRoots.md",sourceDirName:"api-reference/core",slug:"/api-reference/core/useRecoilBridgeAcrossReactRoots",permalink:"/docs/api-reference/core/useRecoilBridgeAcrossReactRoots",editUrl:"https://github.com/facebookexperimental/Recoil/edit/docs/docs/docs/api-reference/core/useRecoilBridgeAcrossReactRoots.md",version:"current",sidebar_label:"useRecoilBridgeAcrossReactRoots()",frontMatter:{title:"useRecoilBridgeAcrossReactRoots()",sidebar_label:"useRecoilBridgeAcrossReactRoots()"},sidebar:"docs",previous:{title:"useGotoRecoilSnapshot(snapshot)",permalink:"/docs/api-reference/core/useGotoRecoilSnapshot"}},s=[{value:"Example",id:"example",children:[]}],l={toc:s};function u(e){var t=e.components,r=(0,n.Z)(e,["components"]);return(0,c.kt)("wrapper",(0,o.Z)({},l,r,{components:t,mdxType:"MDXLayout"}),(0,c.kt)("p",null,"A hook to help with bridging Recoil state with a nested React root and renderer."),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-jsx"},"function useRecoilBridgeAcrossReactRoots_UNSTABLE():\n  React.AbstractComponent<{children: React.Node}>;\n")),(0,c.kt)("p",null,"If a nested React root is created with ",(0,c.kt)("inlineCode",{parentName:"p"},"ReactDOM.render()"),', or a nested custom renderer is used, React will not propagate context state to the child root.  This hook is useful if you would like to "bridge" and share Recoil state with a nested React root.  The hook returns a React component which you can use instead of ',(0,c.kt)("inlineCode",{parentName:"p"},"<RecoilRoot>")," in your nested React root to share the same consistent Recoil store state. As with any state sharing across React roots, changes may not be perfectly synchronized in all cases."),(0,c.kt)("h3",{id:"example"},"Example"),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-jsx"},"function Bridge() {\n  const RecoilBridge = useRecoilBridgeAcrossReactRoots_UNSTABLE();\n\n  return (\n    <CustomRenderer>\n      <RecoilBridge>\n        ...\n      </RecoilBridge>\n    </CustomRenderer>\n  );\n}\n\nfunction MyApp() {\n  return (\n    <RecoilRoot>\n      ...\n      <Bridge />\n    </RecoilRoot>\n  );\n}\n")))}u.isMDXComponent=!0}}]);