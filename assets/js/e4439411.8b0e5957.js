(self.webpackChunkrecoil=self.webpackChunkrecoil||[]).push([[7902],{3905:function(e,t,n){"use strict";n.d(t,{Zo:function(){return u},kt:function(){return f}});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function a(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=r.createContext({}),l=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},u=function(e){var t=l(e.components);return r.createElement(c.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,c=e.parentName,u=a(e,["components","mdxType","originalType","parentName"]),d=l(n),f=o,m=d["".concat(c,".").concat(f)]||d[f]||p[f]||i;return n?r.createElement(m,s(s({ref:t},u),{},{components:n})):r.createElement(m,s({ref:t},u))}));function f(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,s=new Array(i);s[0]=d;var a={};for(var c in t)hasOwnProperty.call(t,c)&&(a[c]=t[c]);a.originalType=e,a.mdxType="string"==typeof e?e:o,s[1]=a;for(var l=2;l<i;l++)s[l]=n[l];return r.createElement.apply(null,s)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},6263:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return s},metadata:function(){return a},toc:function(){return c},default:function(){return u}});var r=n(2122),o=n(9756),i=(n(7294),n(3905)),s={title:"Testing"},a={unversionedId:"guides/testing",id:"guides/testing",isDocsHomePage:!1,title:"Testing",description:"Testing Recoil Selectors outside of React",source:"@site/docs/guides/testing.md",sourceDirName:"guides",slug:"/guides/testing",permalink:"/docs/guides/testing",editUrl:"https://github.com/facebookexperimental/Recoil/edit/docs/docs/docs/guides/testing.md",version:"current",frontMatter:{title:"Testing"},sidebar:"docs",previous:{title:"Atom Effects",permalink:"/docs/guides/atom-effects"},next:{title:"Development Tools",permalink:"/docs/guides/dev-tools"}},c=[{value:"Testing Recoil Selectors outside of React",id:"testing-recoil-selectors-outside-of-react",children:[{value:"Example: Jest unit testing selectors",id:"example-jest-unit-testing-selectors",children:[]}]}],l={toc:c};function u(e){var t=e.components,n=(0,o.Z)(e,["components"]);return(0,i.kt)("wrapper",(0,r.Z)({},l,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"testing-recoil-selectors-outside-of-react"},"Testing Recoil Selectors outside of React"),(0,i.kt)("p",null,"It can be useful to manipulate and evaluate Recoil selectors outside of a React context for testing.  This can be done by working with a Recoil ",(0,i.kt)("a",{parentName:"p",href:"/docs/api-reference/core/Snapshot"},(0,i.kt)("inlineCode",{parentName:"a"},"Snapshot")),".  You can build a fresh snapshot using ",(0,i.kt)("inlineCode",{parentName:"p"},"snapshot_UNSTABLE()")," and then use that ",(0,i.kt)("inlineCode",{parentName:"p"},"Snapshot")," to evaluate selectors for testing."),(0,i.kt)("h3",{id:"example-jest-unit-testing-selectors"},"Example: Jest unit testing selectors"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-jsx"},"const numberState = atom({key: 'Number', default: 0});\n\nconst multipliedState = selector({\n  key: 'MultipliedNumber',\n  get: ({get}) => get(numberState) * 100,\n});\n\ntest('Test multipliedState', () => {\n  const initialSnapshot = snapshot_UNSTABLE();\n  expect(initialSnapshot.getLoadable(multipliedState).valueOrThrow()).toBe(0);\n\n  const testSnapshot = snapshot_UNSTABLE(({set}) => set(numberState, 1));\n  expect(testSnapshot.getLoadable(multipliedState).valueOrThrow()).toBe(100);\n})\n")))}u.isMDXComponent=!0}}]);