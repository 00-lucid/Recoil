"use strict";(self.webpackChunkrecoil=self.webpackChunkrecoil||[]).push([[53],{1109:function(e){e.exports=JSON.parse('{"pluginId":"default","version":"current","label":"Suivant","banner":null,"badge":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"docs":[{"type":"category","collapsed":true,"collapsible":true,"label":"Introduction","items":[{"type":"link","label":"Motivation","href":"/fr/docs/introduction/motivation","docId":"introduction/motivation"},{"type":"link","label":"Concepts de base","href":"/fr/docs/introduction/core-concepts","docId":"introduction/core-concepts"},{"type":"link","label":"Installation","href":"/fr/docs/introduction/installation","docId":"introduction/installation"},{"type":"link","label":"Commencer","href":"/fr/docs/introduction/getting-started","docId":"introduction/getting-started"}]},{"type":"category","collapsed":true,"collapsible":true,"label":"Tutoriel de base","items":[{"type":"link","label":"Introduction","href":"/fr/docs/basic-tutorial/intro","docId":"basic-tutorial/intro"},{"type":"link","label":"Atomes","href":"/fr/docs/basic-tutorial/atoms","docId":"basic-tutorial/atoms"},{"type":"link","label":"S\xe9lecteurs","href":"/fr/docs/basic-tutorial/selectors","docId":"basic-tutorial/selectors"}]},{"type":"category","collapsed":true,"collapsible":true,"label":"Guides","items":[{"type":"link","label":"Requ\xeates asynchrones","href":"/fr/docs/guides/asynchronous-data-queries","docId":"guides/asynchronous-data-queries"},{"type":"link","label":"Effets Atomiques","href":"/fr/docs/guides/atom-effects","docId":"guides/atom-effects"},{"type":"link","label":"Test","href":"/fr/docs/guides/testing","docId":"guides/testing"},{"type":"link","label":"Outils de d\xe9veloppement","href":"/fr/docs/guides/dev-tools","docId":"guides/dev-tools"}]},{"type":"category","collapsed":true,"collapsible":true,"label":"R\xe9f\xe9rence API","items":[{"type":"link","label":"<RecoilRoot />","href":"/fr/docs/api-reference/core/RecoilRoot","docId":"api-reference/core/RecoilRoot"},{"type":"category","collapsed":true,"collapsible":true,"label":"\xc9tat","items":[{"type":"link","label":"atom()","href":"/fr/docs/api-reference/core/atom","docId":"api-reference/core/atom"},{"type":"link","label":"selector()","href":"/fr/docs/api-reference/core/selector","docId":"api-reference/core/selector"},{"type":"link","label":"Loadable","href":"/fr/docs/api-reference/core/Loadable","docId":"api-reference/core/Loadable"},{"type":"link","label":"useRecoilState()","href":"/fr/docs/api-reference/core/useRecoilState","docId":"api-reference/core/useRecoilState"},{"type":"link","label":"useRecoilValue()","href":"/fr/docs/api-reference/core/useRecoilValue","docId":"api-reference/core/useRecoilValue"},{"type":"link","label":"useSetRecoilState()","href":"/fr/docs/api-reference/core/useSetRecoilState","docId":"api-reference/core/useSetRecoilState"},{"type":"link","label":"useResetRecoilState()","href":"/fr/docs/api-reference/core/useResetRecoilState","docId":"api-reference/core/useResetRecoilState"},{"type":"link","label":"useRecoilStateLoadable()","href":"/fr/docs/api-reference/core/useRecoilStateLoadable","docId":"api-reference/core/useRecoilStateLoadable"},{"type":"link","label":"useRecoilValueLoadable()","href":"/fr/docs/api-reference/core/useRecoilValueLoadable","docId":"api-reference/core/useRecoilValueLoadable"},{"type":"link","label":"useGetRecoilValueInfo()","href":"/fr/docs/api-reference/core/useGetRecoilValueInfo","docId":"api-reference/core/useGetRecoilValueInfo"},{"type":"link","label":"useRecoilRefresher()","href":"/fr/docs/api-reference/core/useRecoilRefresher","docId":"api-reference/core/useRecoilRefresher"},{"type":"link","label":"isRecoilValue()","href":"/fr/docs/api-reference/core/isRecoilValue","docId":"api-reference/core/isRecoilValue"}]},{"type":"category","collapsed":true,"collapsible":true,"label":"Outils","items":[{"type":"link","label":"atomFamily()","href":"/fr/docs/api-reference/utils/atomFamily","docId":"api-reference/utils/atomFamily"},{"type":"link","label":"selectorFamily()","href":"/fr/docs/api-reference/utils/selectorFamily","docId":"api-reference/utils/selectorFamily"},{"type":"link","label":"constSelector()","href":"/fr/docs/api-reference/utils/constSelector","docId":"api-reference/utils/constSelector"},{"type":"link","label":"errorSelector()","href":"/fr/docs/api-reference/utils/errorSelector","docId":"api-reference/utils/errorSelector"},{"type":"link","label":"noWait()","href":"/fr/docs/api-reference/utils/noWait","docId":"api-reference/utils/noWait"},{"type":"link","label":"waitForAll()","href":"/fr/docs/api-reference/utils/waitForAll","docId":"api-reference/utils/waitForAll"},{"type":"link","label":"waitForAllSettled()","href":"/fr/docs/api-reference/utils/waitForAllSettled","docId":"api-reference/utils/waitForAllSettled"},{"type":"link","label":"waitForNone()","href":"/fr/docs/api-reference/utils/waitForNone","docId":"api-reference/utils/waitForNone"},{"type":"link","label":"waitForAny()","href":"/fr/docs/api-reference/utils/waitForAny","docId":"api-reference/utils/waitForAny"}]},{"type":"link","label":"useRecoilTransaction()","href":"/fr/docs/api-reference/core/useRecoilTransaction","docId":"api-reference/core/useRecoilTransaction"},{"type":"link","label":"useRecoilCallback()","href":"/fr/docs/api-reference/core/useRecoilCallback","docId":"api-reference/core/useRecoilCallback"},{"type":"category","collapsed":true,"collapsible":true,"label":"Instantan\xe9","items":[{"type":"link","label":"Snapshot","href":"/fr/docs/api-reference/core/Snapshot","docId":"api-reference/core/Snapshot"},{"type":"link","label":"useRecoilTransactionObserver()","href":"/fr/docs/api-reference/core/useRecoilTransactionObserver","docId":"api-reference/core/useRecoilTransactionObserver"},{"type":"link","label":"useRecoilSnapshot()","href":"/fr/docs/api-reference/core/useRecoilSnapshot","docId":"api-reference/core/useRecoilSnapshot"},{"type":"link","label":"useGotoRecoilSnapshot()","href":"/fr/docs/api-reference/core/useGotoRecoilSnapshot","docId":"api-reference/core/useGotoRecoilSnapshot"}]},{"type":"category","collapsed":true,"collapsible":true,"label":"Divers","items":[{"type":"link","label":"useRecoilBridgeAcrossReactRoots()","href":"/fr/docs/api-reference/core/useRecoilBridgeAcrossReactRoots","docId":"api-reference/core/useRecoilBridgeAcrossReactRoots"}]}]}]},"docs":{"api-reference/core/atom":{"id":"api-reference/core/atom","title":"atome(options)","description":"Un atome repr\xe9sente l\'\xe9tat dans Recoil. La fonction atom() renvoie un objet RecoilState inscriptible.","sidebar":"docs"},"api-reference/core/isRecoilValue":{"id":"api-reference/core/isRecoilValue","title":"isRecoilValue(value)","description":"Retourne true si value est soit un atome soit un s\xe9lecteur ou false sinon.","sidebar":"docs"},"api-reference/core/Loadable":{"id":"api-reference/core/Loadable","title":"class Loadable","description":"Un objet Loadable repr\xe9sente l\'\xe9tat actuel d\'un Recoil atome ou s\xe9lecteur. Cet \xe9tat peut avoir une valeur disponible, \xeatre dans un \xe9tat d\'erreur ou encore \xeatre en attente de r\xe9solution asynchrone. Un Loadable a l\'interface suivante:","sidebar":"docs"},"api-reference/core/RecoilRoot":{"id":"api-reference/core/RecoilRoot","title":"<RecoilRoot ...props />","description":"Fournit le contexte dans lequel les atomes ont des valeurs. Doit \xeatre un anc\xeatre de tout composant qui utilise des hooks Recoil. Plusieurs racines peuvent coexister; les atomes auront des valeurs distinctes dans chaque racine. S\'ils sont imbriqu\xe9s, la racine la plus interne masquera compl\xe8tement les racines externes.","sidebar":"docs"},"api-reference/core/selector":{"id":"api-reference/core/selector","title":"selector(options)","description":"Les s\xe9lecteurs repr\xe9sentent une fonction, ou un \xe9tat d\xe9riv\xe9 dans Recoil. Vous pouvez les consid\xe9rer comme similaires \xe0 une \\"fonction idempotente\\" ou \\"pure\\" sans effets secondaires qui renvoie toujours la m\xeame valeur pour un ensemble donn\xe9 de valeurs de d\xe9pendance. Si seule une fonction get est fournie, le s\xe9lecteur est en lecture seule et renvoie un objet RecoilValueReadOnly. Si un set est \xe9galement fourni, il renvoie un objet RecoilState inscriptible.","sidebar":"docs"},"api-reference/core/Snapshot":{"id":"api-reference/core/Snapshot","title":"class Snapshot","description":"Un objet Snapshot (instan\xe9) repr\xe9sente un instantan\xe9 immuable de l\'\xe9tat de Recoil atomes. Il est destin\xe9 \xe0 normaliser l\'API pour observer, inspecter et g\xe9rer l\'\xe9tat Recoil global. Il est surtout utile pour les outils de d\xe9veloppement, la synchronisation globale de l\'\xe9tat, la navigation dans l\'historique, etc.","sidebar":"docs"},"api-reference/core/useGetRecoilValueInfo":{"id":"api-reference/core/useGetRecoilValueInfo","title":"useGetRecoilValueInfo_UNSTABLE()","description":"Ce hook permet \xe0 un composant de \\"jetter un \u0153il\\" \xe0 l\'\xe9tat courant, valeur, et autres informations concernant l\'atome ou s\xe9lecteur. Ceci est similaire \xe0 la m\xe9thode getInfo_UNSTABLE() de Snapshot","sidebar":"docs"},"api-reference/core/useGotoRecoilSnapshot":{"id":"api-reference/core/useGotoRecoilSnapshot","title":"useGotoRecoilSnapshot(snapshot)","description":"Ce hook renvoie un callback qui prend un Snapshot comme param\xe8tre et mettra \xe0 jour le `` actuel pour correspondre \xe0 cet \xe9tat d\'atome.","sidebar":"docs"},"api-reference/core/useRecoilBridgeAcrossReactRoots":{"id":"api-reference/core/useRecoilBridgeAcrossReactRoots","title":"useRecoilBridgeAcrossReactRoots()","description":"Ce hook aide \xe0 la cr\xe9ation de ponts entre l\'\xe9tat Recoil et une racine React imbriqu\xe9e.","sidebar":"docs"},"api-reference/core/useRecoilCallback":{"id":"api-reference/core/useRecoilCallback","title":"useRecoilCallback(callback, deps)","description":"Ce hook est similaire \xe0 useCallback(), mais fournira \xe9galement une API pour que vos rappels fonctionnent avec l\'\xe9tat Recoil. Ce hook peut \xeatre utilis\xe9 pour construire un callback qui a acc\xe8s \xe0 un Snapshot en lecture seule de l\'\xe9tat Recoil et la possibilit\xe9 de mettre \xe0 jour de mani\xe8re asynchrone l\'\xe9tat Recoil actuel.","sidebar":"docs"},"api-reference/core/useRecoilRefresher":{"id":"api-reference/core/useRecoilRefresher","title":"useRecoilRefresher_UNSTABLE(state)","description":"The useRecoilRefresher_UNSTABLE() hook returns a callback which can be called with a selector to clear any caches associated with it.  If a selector makes any async requests this would cause it to re-evaluate and issue a new request.  This is useful, for example, if you wish to refresh with newer data or re-try after an error.  (See Asynchronous Data Queries Guide)","sidebar":"docs"},"api-reference/core/useRecoilSnapshot":{"id":"api-reference/core/useRecoilSnapshot","title":"useRecoilSnapshot()","description":"Ce hook renvoie de mani\xe8re synchrone un objet Snapshot pendant le rendu et souscrit au composant appelant pour tous les changements d\'\xe9tat Recoil. Vous souhaiterez peut-\xeatre utiliser ce hook pour les outils de d\xe9bogage ou pour le rendu c\xf4t\xe9 serveur o\xf9 vous devez avoir l\'\xe9tat de mani\xe8re synchrone lors du rendu initial.","sidebar":"docs"},"api-reference/core/useRecoilState":{"id":"api-reference/core/useRecoilState","title":"useRecoilState(state)","description":"Renvoie un tuple o\xf9 le premier \xe9l\xe9ment est la valeur de l\'\xe9tat et le deuxi\xe8me \xe9l\xe9ment est une fonction de d\xe9finition qui mettra \xe0 jour la valeur de l\'\xe9tat donn\xe9 lorsqu\'elle est appel\xe9e.","sidebar":"docs"},"api-reference/core/useRecoilStateLoadable":{"id":"api-reference/core/useRecoilStateLoadable","title":"useRecoilStateLoadable(state)","description":"Ce hook est destin\xe9 \xe0 \xeatre utilis\xe9 pour lire la valeur des s\xe9lecteurs asynchrones. Ce hook abonnera implicitement le composant \xe0 l\'\xe9tat donn\xe9.","sidebar":"docs"},"api-reference/core/useRecoilTransaction":{"id":"api-reference/core/useRecoilTransaction","title":"useRecoilTransaction_UNSTABLE(callback, deps)","description":"Create a transaction callback which can be used to atomically update multiple atoms in a safe, easy, and efficient way.  Provide a callback for the transaction as a pure function which can get() or set() multiple atoms.  A transaction is similar to the \\"updater\\" form of setting Recoil state, but can operate over multiple atoms.  Writes are visible to subsequent reads from within the same transaction.","sidebar":"docs"},"api-reference/core/useRecoilTransactionObserver":{"id":"api-reference/core/useRecoilTransactionObserver","title":"useRecoilTransactionObserver_UNSTABLE(callback)","description":"* REMARQUE *: Veuillez consid\xe9rer cette API comme instable","sidebar":"docs"},"api-reference/core/useRecoilValue":{"id":"api-reference/core/useRecoilValue","title":"useRecoilValue(state)","description":"Renvoie la valeur de l\'\xe9tat Recoil donn\xe9.","sidebar":"docs"},"api-reference/core/useRecoilValueLoadable":{"id":"api-reference/core/useRecoilValueLoadable","title":"useRecoilValueLoadable(state)","description":"Ce hook est destin\xe9 \xe0 \xeatre utilis\xe9 pour lire la valeur des s\xe9lecteurs asynchrones. Ce hook abonnera implicitement le composant \xe0 l\'\xe9tat donn\xe9.","sidebar":"docs"},"api-reference/core/useResetRecoilState":{"id":"api-reference/core/useResetRecoilState","title":"useResetRecoilState(state)","description":"Renvoie une fonction qui r\xe9initialisera la valeur de l\'\xe9tat donn\xe9 \xe0 sa valeur par d\xe9faut.","sidebar":"docs"},"api-reference/core/useSetRecoilState":{"id":"api-reference/core/useSetRecoilState","title":"useSetRecoilState(state)","description":"Renvoie une fonction de r\xe9glage pour mettre \xe0 jour la valeur de l\'\xe9tat Recoil inscriptible.","sidebar":"docs"},"api-reference/utils/atomFamily":{"id":"api-reference/utils/atomFamily","title":"atomFamily(options)","description":"Renvoie une fonction qui renvoie un RecoilState atom inscriptible.","sidebar":"docs"},"api-reference/utils/constSelector":{"id":"api-reference/utils/constSelector","title":"constSelector(constante)","description":"Un s\xe9lecteur qui fournit toujours une valeur constante.","sidebar":"docs"},"api-reference/utils/errorSelector":{"id":"api-reference/utils/errorSelector","title":"errorSelector(message)","description":"Un s\xe9lecteur qui renvoie toujours l\'erreur fournie","sidebar":"docs"},"api-reference/utils/noWait":{"id":"api-reference/utils/noWait","title":"noWait(state)","description":"Un assistant de s\xe9lection qui renverra un Loadable pour l\'\xe9tat actuel de l\'atome) ou  s\xe9lecteur.","sidebar":"docs"},"api-reference/utils/selectorFamily":{"id":"api-reference/utils/selectorFamily","title":"selectorFamily(options)","description":"Renvoie une fonction qui renvoie un s\xe9lecteur en lecture seule RecoilValueReadOnly ou en \xe9criture RecoilState.","sidebar":"docs"},"api-reference/utils/waitForAll":{"id":"api-reference/utils/waitForAll","title":"waitForAll(dependencies)","description":"Un assistant d\'acc\xe8s concurrentiel qui nous permet d\'\xe9valuer simultan\xe9ment plusieurs d\xe9pendances asynchrones.","sidebar":"docs"},"api-reference/utils/waitForAllSettled":{"id":"api-reference/utils/waitForAllSettled","title":"waitForAllSettled(dependencies)","description":"Un assistant de concurrence qui renvoie un ensemble de Loadables pour l\'\xe9tat actuel des d\xe9pendances demand\xe9es. Il attend que toutes les d\xe9pendances soient soit une valeur ou une erreur.","sidebar":"docs"},"api-reference/utils/waitForAny":{"id":"api-reference/utils/waitForAny","title":"waitForAny(dependencies)","description":"Un assistant de concurrence qui renvoie un ensemble de Loadables pour l\'\xe9tat actuel des d\xe9pendances demand\xe9es. Il attend qu\'au moins une des d\xe9pendances soit disponible.","sidebar":"docs"},"api-reference/utils/waitForNone":{"id":"api-reference/utils/waitForNone","title":"waitForNone(dependencies)","description":"Un assistant de concurrence qui renvoie un ensemble de [Loadables] (/docs/api-reference/core/Loadable) pour l\'\xe9tat actuel des d\xe9pendances demand\xe9es.","sidebar":"docs"},"basic-tutorial/atoms":{"id":"basic-tutorial/atoms","title":"Atomes","description":"Les atomes contiennent la source de v\xe9rit\xe9 de l\'\xe9tat de notre application. Dans notre liste de t\xe2ches, la source de v\xe9rit\xe9 sera un tableau d\'objets, chaque objet repr\xe9sentant une t\xe2che.","sidebar":"docs"},"basic-tutorial/demo":{"id":"basic-tutorial/demo","title":"Demo (Liste de t\xe2ches)","description":"Vous pouvez \xe9crire du JSX et utiliser des composants React dans votre Markdown grace \xe0 MDX."},"basic-tutorial/intro":{"id":"basic-tutorial/intro","title":"Introduction","description":"Cette section suppose que vous avez install\xe9 Recoil et React. Consultez la page Commencer pour savoir comment d\xe9marrer avec Recoil et React \xe0 partir de z\xe9ro. Les composants des sections suivantes sont suppos\xe9s avoir un `` dans l\'arborescence parent.","sidebar":"docs"},"basic-tutorial/performance":{"id":"basic-tutorial/performance","title":"Bonus: Performance","description":"Notre impl\xe9mentation existante est parfaitement valide, mais il y a des implications importantes sur les performances \xe0 prendre en compte \xe0 mesure que notre application \xe9volue d\'un petit projet \xe0 un programme d\'entreprise d\'un million de lignes."},"basic-tutorial/selectors":{"id":"basic-tutorial/selectors","title":"S\xe9lecteurs","description":"Un s\xe9lecteur repr\xe9sente une partie d\'un \xe9tat d\xe9riv\xe9. Vous pouvez consid\xe9rer un \xe9tat d\xe9riv\xe9 comme la sortie d\'un \xe9tat passant \xe0 une fonction pure qui modifie l\'\xe9tat donn\xe9 d\'une mani\xe8re ou d\'une autre.","sidebar":"docs"},"guides/asynchronous-data-queries":{"id":"guides/asynchronous-data-queries","title":"Requ\xeates de donn\xe9es asynchrones","description":"Recoil fournit un moyen de mapper \xe9tat et \xe9tat d\xe9riv\xe9 aux composants React via un graphe de flux de donn\xe9es. Ce qui est vraiment puissant, c\'est que les fonctions du graphe peuvent \xe9galement \xeatre asynchrones. Cela facilite l\'utilisation de fonctions asynchrones au sein de fonctions synchrones de composants React. Recoil vous permet de m\xe9langer de mani\xe8re transparente des fonctions synchrones et asynchrones dans votre graphe de flux de donn\xe9es de s\xe9lecteurs. Renvoyez simplement une promesse de valeur au lieu de la valeur elle-m\xeame \xe0 partir d\'un rappel de s\xe9lecteur get, l\'interface reste exactement la m\xeame. Comme ce ne sont que des s\xe9lecteurs, d\'autres s\xe9lecteurs peuvent \xe9galement en d\xe9pendre pour transformer davantage les donn\xe9es.","sidebar":"docs"},"guides/atom-effects":{"id":"guides/atom-effects","title":"Effets Atomiques","description":"Effets Atomiques est une nouvelle API exp\xe9rimentale pour la gestion des effets secondaires et l\'initialisation des atomes Recoil. Ils ont une vari\xe9t\xe9 d\'applications utiles telles que la persistance d\'\xe9tat, la synchronisation d\'\xe9tat, la gestion de l\'historique, la journalisation, etc. Ils sont d\xe9finis dans le cadre de la d\xe9finition de l\'atome, de sorte que chaque atome peut sp\xe9cifier et composer ses propres politiques. Cette API est toujours en \xe9volution, et donc marqu\xe9e comme _UNSTABLE.","sidebar":"docs"},"guides/code-splitting":{"id":"guides/code-splitting","title":"Fragmentation de code","description":"Vous pouvez \xe9crire du JSX et utiliser des composants React dans votre Markdown grace \xe0 MDX."},"guides/dev-tools":{"id":"guides/dev-tools","title":"Outils de d\xe9veloppement","description":"Recoil a des fonctionnalit\xe9s pour vous permettre d\'observer et de mettre \xe0 jour les changements d\'\xe9tat.","sidebar":"docs"},"guides/migrating/from-mobx":{"id":"guides/migrating/from-mobx","title":"Depuis MobX","description":"Vous pouvez \xe9crire du JSX et utiliser des composants React dans votre Markdown grace \xe0 MDX."},"guides/migrating/from-react-state":{"id":"guides/migrating/from-react-state","title":"Depuis les \xe9tats React","description":"Vous pouvez \xe9crire du JSX et utiliser des composants React dans votre Markdown grace \xe0 MDX."},"guides/migrating/from-redux":{"id":"guides/migrating/from-redux","title":"Depuis Redux","description":"Vous pouvez \xe9crire du JSX et utiliser des composants React dans votre Markdown grace \xe0 MDX."},"guides/testing":{"id":"guides/testing","title":"Test","description":"Tester des s\xe9lecteur Recoil en dehors de React","sidebar":"docs"},"guides/usage-flow":{"id":"guides/usage-flow","title":"Utilisation avec Flow","description":"Vous pouvez \xe9crire du JSX et utiliser des composants React dans votre Markdown grace \xe0 MDX."},"guides/usage-typescript":{"id":"guides/usage-typescript","title":"Utilisation avec TypeScript","description":"Vous pouvez \xe9crire du JSX et utiliser des composants React dans votre Markdown grace \xe0 MDX."},"guides/writing-test":{"id":"guides/writing-test","title":"\xc9crire des tests","description":"Vous pouvez \xe9crire du JSX et utiliser des composants React dans votre Markdown grace \xe0 MDX."},"introduction/core-concepts":{"id":"introduction/core-concepts","title":"Concepts de base","description":"Aper\xe7u","sidebar":"docs"},"introduction/getting-started":{"id":"introduction/getting-started","title":"Commencer","description":"Create React App","sidebar":"docs"},"introduction/installation":{"id":"introduction/installation","title":"Installation","description":"NPM","sidebar":"docs"},"introduction/motivation":{"id":"introduction/motivation","title":"Motivation","description":"Pour des raisons de compatibilit\xe9 et de simplicit\xe9, il est pr\xe9f\xe9rable d\'utiliser les capacit\xe9s de gestion d\'\xe9tat int\xe9gr\xe9es de React plut\xf4t qu\'un solution d\'\xe9tat global externe. Mais React a certaines limites:","sidebar":"docs"},"mdx":{"id":"mdx","title":"Propuls\xe9 par MDX","description":"Vous pouvez \xe9crire du JSX et utiliser des composants React dans votre Markdown grace \xe0 MDX."}}}')}}]);